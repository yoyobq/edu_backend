### CourseSchedule GraphQL Schema

# CourseSchedule 课程表主表。
# 用于管理课程的基础信息，包括授课教师、教学班、学期等。
type CourseSchedule {
  id: Int!
  staffId: Int!
  staffName: String!
  teachingClassName: String!
  classroomId: Int
  classroomName: String
  courseId: Int
  courseName: String
  semesterId: Int!
  weekCount: Int
  weeklyHours: Int
  credits: Int
  coefficient: Float!
  courseCategory: CourseCategory!
  weekNumberString: String

  # 关联字段
  slots: [CourseSlot]      # 课程时间安排（多对一）
  sourceMap: CourseSourceMap  # 爬取数据映射（仅附属）
}

# 扁平化后的课表返回类型
type FlatScheduleItem {
  scheduleId: Int!
  courseName: String!
  staffId: Int!
  staffName: String!
  teachingClassName: String!
  classroomName: String
  semesterId: Int!
  courseCategory: String!
  credits: Int
  weekCount: Int
  weeklyHours: Int
  coefficient: String!
  weekNumberString: String
  slotId: Int!
  dayOfWeek: Int!
  periodStart: Int!
  periodEnd: Int!
  weekType: String!
}


# 课程类别枚举类型。
enum CourseCategory {
  THEORY          # 理论课
  PRACTICE        # 实践课
  INTEGRATED      # 一体化
  CLUB            # 社团课
  CLASS_MEETING   # 班会课
  OTHER           # 其他课程
}

# 课程数据爬取映射，仅作为 CourseSchedule 的附属数据。
# 不提供独立查询。
type CourseSourceMap {
  id: Int!
  courseScheduleId: Int
  lecturePlanId: String!
  courseId: String!
  teacherInChargeId: String!
  teachingClassId: String!
  staffId: Int!
  semesterId: Int!
}

# 实际有效的上课日期详情
type TeachingDate {
  date: String!           # 日期，如 "2025-06-10"
  weekOfDay: Int!         # 星期几 (1-7)
  weekNumber: Int!        # 第几教学周
  courses: [TeachingCourse]!  # 当天课程列表
}

# 课程的详细信息
type TeachingCourse {
  scheduleId: Int!
  courseName: String!
  slotId: Int!
  periodStart: Int!
  periodEnd: Int!
  weekType: String!
  coefficient: Float!
}

# 取消课程的日期详情（含假期调课说明）
type CancelledTeachingDate {
  date: String!
  weekOfDay: Int!
  weekNumber: Int!
  courses: [TeachingCourse]!
  note: String             # 若调课则提供说明
}

# 批量统计教师课时结果类型
type TeachingHourSummary {
  staffId: Int!
  sstsTeacherId: String!
  staffName: String!
  totalHours: Float!
}

# 创建课程表输入类型。
input CreateCourseScheduleInput {
  staffId: Int!
  staffName: String!
  teachingClassName: String!
  classroomId: Int
  classroomName: String
  courseId: Int
  courseName: String
  semesterId: Int!
  weekCount: Int
  weeklyHours: Int
  credits: Int
  coefficient: Float!
  courseCategory: CourseCategory!
  weekNumberString: String
}

# 更新课程表输入类型。
input UpdateCourseScheduleInput {
  staffId: Int
  staffName: String
  teachingClassName: String
  classroomId: Int
  classroomName: String
  courseId: Int
  courseName: String
  semesterId: Int
  weekCount: Int
  weeklyHours: Int
  credits: Int
  coefficient: Float
  courseCategory: CourseCategory
  weekNumberString: String
}

# 用于精确课时计算的参数
input TeachingDateInput {
  semesterId: Int!
  staffId: Int
  sstsTeacherId: String
  weeks: [Int]             # [12,16] 表示 12 周至 16 周
}

# 用于批量计算的参数
input BatchTeachingHourFilter {
  semesterId: Int!
  staffIds: [Int]
  sstsTeacherIds: [String]
  weeks: [Int]
}

# DailyScheduleInput 类型
input DailyScheduleInput {
  staffId: Int!
  date: String!
}

# FullScheduleInput 类型
input FullScheduleInput {
  staffId: Int!
  semesterId: Int!
}

# 查询和变更类型。
extend type Query {
  # 此处是 service.plan.courseSchedule 的相关操作，暂不对外开放
  # getCourseSchedule(id: Int!): CourseSchedule
  # listCourseSchedules(semesterId: Int, staffId: Int, includeSlots: Boolean = false): [CourseSchedule]

  # 以下是 service.plan.courseScheduleManager 的相关操作
  # 查询某个教师某学期的完整课表
  getFullScheduleByStaff(input:FullScheduleInput!): [FlatScheduleItem]!
  # 查询某教师某天的课表
  getDailySchedule(input:DailyScheduleInput!): [FlatScheduleItem]!
  
  # 获取单个教师的实际教学日程（含周次过滤）
  actualTeachingDates(input: TeachingDateInput!): [TeachingDate]!

  # 获取单个教师因假期取消的课程（含周次过滤）
  cancelledCourses(input: TeachingDateInput!): [CancelledTeachingDate]!

  # 获取单个教师实际课时数（含周次过滤）
  teachingHours(input: TeachingDateInput!): Float!

  # 批量获取多个教师的实际课时数
  batchTeachingHours(input: BatchTeachingHourFilter!): [TeachingHourSummary]!
}

extend type Mutation {
  createCourseSchedule(input: CreateCourseScheduleInput!): CourseSchedule!
  updateCourseSchedule(id: Int!, input: UpdateCourseScheduleInput!): CourseSchedule!
  deleteCourseSchedule(id: Int!): Boolean!
}
