type User {
  id: Int!
  accountId: Int!
  name: String!
  avatar: String
  email: String!
  signature: String
  accessGroup: String
  address: String
  phone: String
  tags: JSON
  geographic: JSON
  notifyCount: Int
  unreadCount: Int
}

type Users {
  users: [User!]
}

input CreateUserInput {
  accountId: Int!
  name: String!
  avatar: String
  email: String!
  signature: String
  accessGroup: String
  address: String
  phone: String
  tags: JSON
  geographic: JSON
  notifyCount: Int
  unreadCount: Int
}

input UpdateUserInput {
  name: String
  avatar: String
  email: String
  signature: String
  accessGroup: String
  address: String
  phone: String
  tags: JSON
  geographic: JSON
  notifyCount: Int
  unreadCount: Int
}

extend type Query {
  user(id: Int!): User
  users: [User]
}

extend type Mutation {
  createBaseUserInfo(input: CreateUserInput!): User!
  updateBaseUserInfo(id: Int!, input: UpdateUserInput!): User!
  deleteBaseUserInfo(id: Int!): User!
}
